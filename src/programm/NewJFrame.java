/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programm;

import java.awt.PopupMenu;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CB_basa = new javax.swing.JComboBox();
        B_add = new javax.swing.JButton();
        B_change = new javax.swing.JButton();
        B_delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CB_found = new javax.swing.JComboBox();
        B_found = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        TB_name = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMain = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("база данных");
        setResizable(false);

        CB_basa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "студенты", "группа", "дисциплина", "сессия" }));
        CB_basa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_basaActionPerformed(evt);
            }
        });

        B_add.setText("добавить");
        B_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_addActionPerformed(evt);
            }
        });

        B_change.setText("изменить");
        B_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_changeActionPerformed(evt);
            }
        });

        B_delete.setText("удалить");
        B_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_deleteActionPerformed(evt);
            }
        });

        jLabel2.setText("таблица");

        CB_found.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "студенты", "группы", "преподаватели", "сессия", "дисциплина" }));
        CB_found.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_foundActionPerformed(evt);
            }
        });

        B_found.setText("найти");
        B_found.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_foundActionPerformed(evt);
            }
        });

        jLabel1.setText("поиск по:");

        tblMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(B_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B_change, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B_add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(B_found, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TB_name, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CB_found, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(CB_basa, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CB_found, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CB_basa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TB_name, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(B_found, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_add)
                    .addComponent(B_delete)
                    .addComponent(B_change))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_addActionPerformed
        try {
            //new NewJFrame_add1(this, rootPaneCheckingEnabled).setVisible(rootPaneCheckingEnabled);
            
            if (CB_basa.getSelectedItem() == "студенты")
            {
            NewJFrame_add1 dialog = new NewJFrame_add1(new javax.swing.JFrame(), true);
            dialog.setTitle("добавление даннных");
            dialog.setVisible(true);
            
            
            if ((dialog.getReturnStatus() == 1) &&
                    dialog.tb_familia.getText().trim() != "" &&
                    //dialog.tb_group_name.getText().trim() != "" &&
                    dialog.tb_pasport.getText().trim() != "" && 
                    dialog.tb_stud_bilet.getText().trim() != "" &&
                    dialog.tb_telephone.getText().trim() != "")
            {
            Properties connInfo = new Properties();
            Connection conn=DriverManager.getConnection("jdbc:ucanaccess://BG_GUS2.mdb", connInfo);
            Statement stment = conn.createStatement();
            PreparedStatement pat = conn.prepareStatement("insert into Студенты(фамилия_студента, паспорт, номер_телефона, название_группы, номер_студ_билета) values (?,?,?,?,?)");
            pat.setString(1, dialog.tb_familia.getText().trim());
            pat.setString(2, dialog.tb_pasport.getText().trim());
            pat.setString(3, dialog.tb_telephone.getText().trim());
            pat.setString(5, dialog.tb_stud_bilet.getText().trim());
            //pat.setString(4, dialog.tb_group_name.getText().trim());
            pat.executeUpdate();
            refreshTable();
            }
            }
            else
            if (CB_basa.getSelectedItem() == "группа")
            {
            NewJFrame_add2 dialog = new NewJFrame_add2(new javax.swing.JFrame(), true);
            dialog.setTitle("добавление даннных");
            dialog.setVisible(true);
            
            if ((dialog.getReturnStatus() == 1) &&
                    dialog.tb_group_name.getText().trim() != "" &&
                    dialog.tb_kolvo_stud.getText().trim() != ""  
)
            {
            Properties connInfo = new Properties();
            Connection conn=DriverManager.getConnection("jdbc:ucanaccess://BG_GUS2.mdb", connInfo);
            Statement stment = conn.createStatement();
            PreparedStatement pat = conn.prepareStatement("insert into Группа(название_группы, кол_во_студентов) values (?,?)");
            pat.setString(1, dialog.tb_group_name.getText().trim());
            pat.setString(2, dialog.tb_kolvo_stud.getText().trim());
            pat.executeUpdate();
            refreshTable();
            }
            }
            else
            if (CB_basa.getSelectedItem() == "дисциплина")
            {
            NewJFrame_add3 dialog = new NewJFrame_add3(new javax.swing.JFrame(), true);
            dialog.setTitle("добавление даннных");
            dialog.setVisible(true);
            
            if ((dialog.getReturnStatus() == 1) &&
                    dialog.tb_name_dis.getText().trim() != "")
            {
            Properties connInfo = new Properties();
            Connection conn=DriverManager.getConnection("jdbc:ucanaccess://BG_GUS2.mdb", connInfo);
            Statement stment = conn.createStatement();
            PreparedStatement pat = conn.prepareStatement("insert into Дисциплина(название_предмета, тип_экзамена) values (?,?)");
            
            pat.setString(1, dialog.tb_name_dis.getText().trim());
            if (dialog.CB_zachet.getSelectedItem() == "зачет")
            pat.setString(2, "зачет");
            else if (dialog.CB_zachet.getSelectedItem() == "экзамен")
                pat.setString(2, "экзамен");
            else pat.setString(2, "дефференцированный зачет");
            
            pat.executeUpdate();
            refreshTable();
            }
            }
            else
            if (CB_basa.getSelectedItem() == "сессия")
            {
            NewJFrame_add4 dialog = new NewJFrame_add4(new javax.swing.JFrame(), true);
            dialog.setTitle("добавление даннных");
            dialog.setVisible(true);
            
            if ((dialog.getReturnStatus() == 1) &&
                    dialog.tb_id_stud.getText().trim() != "" &&
                    dialog.tb_id_disc.getText().trim() != "" &&
                    //dialog.tb_app.getText().trim() != "" &&
                    dialog.tb_data.getText().trim() != "")
            {
            Properties connInfo = new Properties();
            Connection conn=DriverManager.getConnection("jdbc:ucanaccess://BG_GUS2.mdb", connInfo);
            Statement stment = conn.createStatement();
            PreparedStatement pat = conn.prepareStatement("insert into Сессия(Ид_студента, ид_дицсциплины, оценка, дата_сдачи) values (?,?,?,?)");
            
            pat.setString(1, dialog.tb_id_stud.getText().trim());
            pat.setString(2, dialog.tb_id_disc.getText().trim());
            //pat.setString(3, dialog.tb_app.getText().trim());
            pat.setString(4, dialog.tb_data.getText().trim());
            
            pat.executeUpdate();
            refreshTable();
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "данные не заполнены");
            //JOptionPane.showMessageDialog(this, ex);
            B_addActionPerformed(evt);
        }
    }//GEN-LAST:event_B_addActionPerformed

    private void B_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_deleteActionPerformed
        //new NewJFrame_delete(this, rootPaneCheckingEnabled).setVisible(rootPaneCheckingEnabled);
        NewJFrame_delete dialog = new NewJFrame_delete(new javax.swing.JFrame(), true);
        dialog.setTitle("удаление даннных");
        //dialog.setVisible(true);

            try {
            //if (dialog.getReturnStatus() == 1)
            {
                Properties connInfo = new Properties();
                Connection conn=DriverManager.getConnection("jdbc:ucanaccess://BG_GUS2.mdb", connInfo);
                Statement stment = conn.createStatement();
                
                int temp = Integer.parseInt(tblMain.getValueAt(tblMain.getSelectedRow(), 0).toString());
                PreparedStatement pat = conn.prepareStatement("delete from Студенты where Ид_студента = ? ");
                pat.setInt(1, temp);
                pat.executeUpdate();
                refreshTable();
            }
            } catch (SQLException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex);
            }    
    }//GEN-LAST:event_B_deleteActionPerformed

    private void B_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_changeActionPerformed
        
            if (tblMain.getSelectedRow() != -1)
                try {
                    
                    int SI = tblMain.getSelectedRow();
                    DefaultTableModel dep = (DefaultTableModel) tblMain.getModel();
                    
                    
                    NewJFrame_add1 dialog = new NewJFrame_add1(new javax.swing.JFrame(), true);
                    dialog.setTitle("изменение даннных");
                    
                    dialog.tb_familia.setText(tblMain.getValueAt(tblMain.getSelectedRow(),1).toString());
                    dialog.tb_pasport.setText(tblMain.getValueAt(tblMain.getSelectedRow(),2).toString());
                    dialog.tb_telephone.setText(tblMain.getValueAt(tblMain.getSelectedRow(),3).toString());
                    dialog.tb_stud_bilet.setText(tblMain.getValueAt(tblMain.getSelectedRow(),4).toString());
                    //dialog.tb_group_name.setText(tblMain.getValueAt(tblMain.getSelectedRow(),5).toString());
                    
                    dialog.setVisible(true);
                    if (dialog.getReturnStatus() == 1)
                    {
                        int iddata = Integer.parseInt(dep.getValueAt(SI, 0).toString());
                        
                        Properties connInfo = new Properties();
                        Connection conn=DriverManager.getConnection("jdbc:ucanaccess://BG_GUS2.mdb", connInfo);
                        Statement stment = conn.createStatement();
                        
                        PreparedStatement pat = conn.prepareStatement("update Студенты set фамилия_студента=?, паспорт=?, номер_телефона=?, название_группы=?, номер_студ_билета=? where ид_студента=?");
                        pat.setString(1, dialog.tb_familia.getText().trim());
                        pat.setString(2, dialog.tb_pasport.getText().trim());
                        pat.setString(3, dialog.tb_telephone.getText().trim());
                        pat.setString(5, dialog.tb_stud_bilet.getText().trim());
                        //pat.setString(4, dialog.tb_group_name.getText().trim());
                        
                        //B_deleteActionPerformed(evt);
                        pat.setInt(6, iddata);
                        pat.executeUpdate();
                        refreshTable();
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, ex);
                }
            else
                JOptionPane.showMessageDialog(this, "не выбрана строка для изменения");
            
    }//GEN-LAST:event_B_changeActionPerformed

    private void B_foundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_foundActionPerformed
        
        String temp = TB_name.getText();
        
        boolean flag = false;
        for (int i = 0; i < tblMain.getColumnCount(); i++)
            if (temp ==  tblMain.getValueAt(1,i))
                flag = true;
        
        if (flag)
            JOptionPane.showMessageDialog(this, "фамилия найдена в списке");
            else
            JOptionPane.showMessageDialog(this, "фамилия не найдена в списке");
    }//GEN-LAST:event_B_foundActionPerformed

    private void CB_foundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_foundActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CB_foundActionPerformed

    private void CB_basaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_basaActionPerformed
        refreshTable();
    }//GEN-LAST:event_CB_basaActionPerformed

    private void refreshTable () {
        
        try {
                    Properties connInfo = new Properties();
                    Connection conn=DriverManager.getConnection("jdbc:ucanaccess://BG_GUS2.mdb", connInfo);
                    Statement stment = conn.createStatement();
                    
        if (CB_basa.getSelectedItem() == "студенты")
        {
        
                    String strQuery = "";
                    strQuery = "SELECT Студенты.ид_студента, Студенты.фамилия_студента, Студенты.название_группы, Студенты.паспорт, Студенты.номер_телефона, Студенты.номер_студ_билета " +
"FROM Студенты;";
                    ResultSet rs = stment.executeQuery(strQuery);
                    DefaultTableModel model = (DefaultTableModel)tblMain.getModel();
                    model.setRowCount(0);
                    model.setColumnCount(0);
                    
                    for (byte i=1; i<= rs.getMetaData().getColumnCount(); i++)
                    {
                        //col.add(rs.getMetaData().getCatalogName(i));
                        model.addColumn(rs.getMetaData().getColumnName(i));
                        System.out.println(rs.getMetaData().getColumnName(i));
                    }
                                            
                    
                    while(rs.next())
                    {
                       
                        Object[] row = {rs.getString(1), rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6)};
                        
                        model.addRow(row);
                    }
        }

        else
                if (CB_basa.getSelectedItem() == "сессия")
                {
                    String strQuery = "";
                    strQuery = "SELECT Сессия.номер_сессии, Сессия.Ид_студента, Сессия.ид_дисциплины, Сессия.оценка, Сессия.дата_сдачи " +
"FROM Сессия;";
                    ResultSet rs = stment.executeQuery(strQuery);
                    DefaultTableModel model = (DefaultTableModel)tblMain.getModel();
                    model.setRowCount(0);
                    model.setColumnCount(0);
                    
                    for (byte i=1; i<= rs.getMetaData().getColumnCount(); i++)
                    {
                        model.addColumn(rs.getMetaData().getColumnName(i));
                        System.out.println(rs.getMetaData().getColumnName(i));
                    }
                    while(rs.next())
                    {
                       
                        Object[] row = {rs.getString(1), rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)};
                        
                        model.addRow(row);
                    }    
                }
        else
                    if (CB_basa.getSelectedItem() == "группа")
                    {
                    String strQuery = "";
                    strQuery = "SELECT Группа.ид_группы, Группа.название_группы, Группа.[кол_во_студентов] " +
"FROM Группа;";
                    ResultSet rs = stment.executeQuery(strQuery);
                    DefaultTableModel model = (DefaultTableModel)tblMain.getModel();
                    model.setRowCount(0);
                    model.setColumnCount(0);
                    
                    for (byte i=1; i<= rs.getMetaData().getColumnCount(); i++)
                    {
                        model.addColumn(rs.getMetaData().getColumnName(i));
                        System.out.println(rs.getMetaData().getColumnName(i));
                    }
                    
                    while(rs.next())
                    {
                       
                        Object[] row = {rs.getString(1), rs.getString(2),rs.getString(3)};
                        
                        model.addRow(row);
                    }    
                    }
                else
                    if (CB_basa.getSelectedItem() == "дисциплина")
                    {

                    String strQuery = "";
                    strQuery = "SELECT Дисциплина.ид_дисциплины, Дисциплина.название_предмета, Дисциплина.тип_экзамена " +
"FROM Дисциплина;";
                    ResultSet rs = stment.executeQuery(strQuery);
                    DefaultTableModel model = (DefaultTableModel)tblMain.getModel();
                    model.setRowCount(0);
                    model.setColumnCount(0);
                    
                    for (byte i=1; i<= rs.getMetaData().getColumnCount(); i++)
                    {
                        model.addColumn(rs.getMetaData().getColumnName(i));
                        System.out.println(rs.getMetaData().getColumnName(i));
                    }
                    while(rs.next())
                    {
                       
                        Object[] row = {rs.getString(1), rs.getString(2),rs.getString(3)};
                        
                        model.addRow(row);
                    }                       
                    }
                    }
                    catch (SQLException ex) 
                {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this,ex);
                }
    }
                    
    
    public void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_add;
    private javax.swing.JButton B_change;
    private javax.swing.JButton B_delete;
    private javax.swing.JButton B_found;
    private javax.swing.JComboBox CB_basa;
    private javax.swing.JComboBox CB_found;
    private javax.swing.JTextField TB_name;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblMain;
    // End of variables declaration//GEN-END:variables

    private JTextField String(Object valueAt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
